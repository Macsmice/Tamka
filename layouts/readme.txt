I. INTRODUCTION

1. What is a Layout?
A Layout is a set of files used to display and format the data generated by a Menu Item View.

2. What is a View?
A View is put into action by a Menu Item. It interacts with a database Model to retrieve state and rowset information required to produce a Layout.

3. What is a rowset?
A rowset is the collection of item information produced by a database Model at the request of a View. The View processes each item in the rowset, one at a time, and invokes the specific layout file needed to display the information.

4. What is a row?
A row is set of data called columns that a layout can use to display information about a single item. The Layout can access the row using the $this->row construct.

5. What is a column?
A column is a single piece of information about an item. The Layout can display column values by specifying the column name for the row, as follows:

<? echo $this->row->column; ?>

II. WHAT IS A MOLAJO LAYOUT?

1. What is a Molajo Layout?
A Molajo Layout is a collection of files used to display output from Molajo Extensions. Layouts can be reused by any Component, Module, or Plugin.

2. What is the structure of a Layout?
Layouts are folders organized in the following:

layout-name
...css
.....Molajo will load all files with a CSS extension that are stored in this subfolder.
...images
.....Any images needed for the layout can be stored in the images subfolder.
...js
.....Molajo will load all files with a JS extension that are stored in this subfolder.
...language
... ... en-GB
... ... ... en-GB.layouts.ini
... ... ... en-GB.layouts.sys.ini
... ... ... index.hmtl
...layouts
... ... Molajo will load these file names and only these file names. Read "How does Molajo load Layout files?" for more.
... ... top.php
... ... header.php
... ... body.php
... ... footer.php
... ... bottom.php
... ... index.hmtl
...parameters
... ... Amy - come back here
... ... name-of-file.xml
...index.html
...item.xml Molajo uses this for installation and update. Read "How does Molajo install Layouts?" for more.

3. Where are Layouts located?

Core Molajo Layouts are located on the root directory in the layouts folder.
Layouts can also be a folder in the component/view/tmpl folder.
Layouts can also be located in the Templates/html/layouts folder.

4. How can I override a core Layout?

To override a core Layout, you can place the Layout folder in the component/view/tmpl folder or the templates/html/layouts folder.
The Template is the first place Molajo will look, then the Component, and finally, the Core Layouts folder.

5. How can I create a Layout?
To create a Layout use the Molajo Administrator Extension Manager-Create Menu Item.

6. How does Molajo install Layouts?
To install a Molajo Layout someone shared with you, use the Molajo Administrator-Extension Manager

7. How can I share my Layout with other Molajo users?


II. WORKING WITH QUERY RESULTS

1.
2. What columns are available in the row for the layout?

3. How is a column value displayed in a layout?

4. Do I need to escape the output before displaying it in a layout?

No, the View will do this for you.

II. STATE

1. What is "state?"

2. What state values are available within a layout?

3. How can state values be used in a layout?

III. WORKING WITH DATES

1. What options are available for formatting dates in layouts?

Dates can be formatted one of two ways, using PHP date or the JHtml class.

1. How can PHP's Date function be used in a layout?

http://php.net/manual/en/function.date.php

Example:
$today = date("F j, Y, g:i a"); // March 10, 2001, 5:16 pm

2. How can Joomla's JHtml function be used in a layout to format dates?

$date	= JHtml::_('date', $this->row->created, JText::_('DATE_FORMAT_LC1'));
$time	= JHtml::_('date', $this->row->checked_out_time, 'H:i');

Options:
DATE_FORMAT_LC="l, d F Y"
DATE_FORMAT_LC1="l, d F Y"
DATE_FORMAT_LC2="l, d F Y H:i"
DATE_FORMAT_LC3="d F Y"
DATE_FORMAT_LC4="Y-m-d"
DATE_FORMAT_JS1="y-m-d"

4. How can I change the date formats for Joomla?
Date formats can be changed by overriding the language file for your implementation.
